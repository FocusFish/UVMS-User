<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

	<changeSet author="emtudorsm" id="password_expiry_notification_1"
		runInTransaction="true" failOnError="true">
		<sql>
  		<![CDATA[alter table user_t add expiry_notification timestamp;]]>
		</sql>
	</changeSet>

	<changeSet author="emtudorsm" id="changeOptionTable" dbms="postgresql">
		<dropView viewName="user_profile_v" />
		<modifyDataType newDataType="bytea" columnName="DEFAULT_VALUE"
			tableName="OPTION_T" />
		<modifyDataType newDataType="bytea" columnName="OPTION_VALUE"
			tableName="PREFERENCE_T" />
		<createView viewName="user_profile_v">
		 SELECT a.name AS application_name,
		    u.user_name,
		    o.name AS option_name,
		    p.option_value,
		    'N'::text AS is_default, 
		    uc.user_context_id
		   FROM option_t o,
		    application_t a,
		    preference_t p
		    INNER JOIN USER_CONTEXT_T UC on uc.USER_CONTEXT_ID=p.user_context_id
		    INNER JOIN USER_T u on u.user_id=uc.USER_ID
		  WHERE o.application_id = a.application_id AND p.option_id = o.option_id
	UNION
		 SELECT a.name AS application_name,
		    u.user_name,
		    o.name AS option_name,
		    o.default_value AS option_value,
		    'Y'::text AS is_default,
		    null as user_context_id
		   FROM option_t o,
		    application_t a,
		    user_t u
		  WHERE o.application_id = a.application_id AND o.default_value IS NOT NULL AND NOT (EXISTS ( SELECT 1
				FROM preference_t p 
				INNER JOIN USER_CONTEXT_T UC on uc.USER_CONTEXT_ID=p.user_context_id
			  WHERE p.option_id = o.option_id and uc.user_id=u.user_id))
	</createView>
		<rollback>
			<dropView viewName="user_profile_v" />
			<modifyDataType newDataType="VARCHAR(32)" columnName="DEFAULT_VALUE"
				tableName="OPTION_T" />
			<modifyDataType newDataType="VARCHAR(32)" columnName="OPTION_VALUE"
				tableName="PREFERENCE_T" />
			<createView viewName="user_profile_v">
		 SELECT a.name AS application_name,
		    u.user_name,
		    o.name AS option_name,
		    p.option_value,
		    'N'::text AS is_default, 
		    uc.user_context_id
		   FROM option_t o,
		    application_t a,
		    preference_t p
		    INNER JOIN USER_CONTEXT_T UC on uc.USER_CONTEXT_ID=p.user_context_id
		    INNER JOIN USER_T u on u.user_id=uc.USER_ID
		  WHERE o.application_id = a.application_id AND p.option_id = o.option_id
	UNION
		 SELECT a.name AS application_name,
		    u.user_name,
		    o.name AS option_name,
		    o.default_value AS option_value,
		    'Y'::text AS is_default,
		    null as user_context_id
		   FROM option_t o,
		    application_t a,
		    user_t u
		  WHERE o.application_id = a.application_id AND o.default_value IS NOT NULL AND NOT (EXISTS ( SELECT 1
				FROM preference_t p 
				INNER JOIN USER_CONTEXT_T UC on uc.USER_CONTEXT_ID=p.user_context_id
			  WHERE p.option_id = o.option_id and uc.user_id=u.user_id))
		</createView>
		</rollback>
	</changeSet>



</databaseChangeLog>
