<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

  <changeSet author="emkrogean" id="app_parent" >
  <addColumn tableName="application_t">
    <column name="parent_id" type="INTEGER" remarks="The identifier of the application parent if any"></column>
  </addColumn>
  <addForeignKeyConstraint baseTableName="application_t" constraintName="application_parent_fk" baseColumnNames="parent_id" referencedTableName="application_t" referencedColumnNames="application_id"/>

  </changeSet>
<changeSet author="emkrogean" id="policy_remove_constraint">
<dropIndex tableName="policy_t" indexName="uk_policy_name" />
</changeSet>
<changeSet author="emkrogean" id="policy_constraint">
<createIndex tableName="policy_t" indexName="uk_policy_name" unique="true">
  <column name="name"/>
  <column name="subject"/>
</createIndex>
</changeSet>


<changeSet author="emkrogean" id="renameTable-user">
    <renameTable 
            newTableName="user_context_t"
            oldTableName="user_role_t" />
    <renameColumn newColumnName="USER_CONTEXT_ID" oldColumnName="USER_ROLE_ID" tableName="USER_CONTEXT_T"/>
	<dropForeignKeyConstraint baseTableName="user_context_t" constraintName="user_role_user_fk"/>
 	<dropForeignKeyConstraint baseTableName="user_context_t" constraintName="user_role_scope_fk"/>
 	<dropForeignKeyConstraint baseTableName="user_context_t" constraintName="user_role_role_fk"/>
 
 	<addForeignKeyConstraint baseTableName="user_context_t" constraintName="user_context_user_fk" baseColumnNames="user_id" referencedTableName="user_t" referencedColumnNames="user_id"/>
 	<addForeignKeyConstraint baseTableName="user_context_t" constraintName="user_context_scope_fk" baseColumnNames="scope_id" referencedTableName="scope_t" referencedColumnNames="scope_id"/>
 	<addForeignKeyConstraint baseTableName="user_context_t" constraintName="user_context_role_fk" baseColumnNames="role_id" referencedTableName="role_t" referencedColumnNames="role_id"/>
 		
 </changeSet>


<changeSet author="emtudorsm" id="postgresqlAurView_change1" runOnChange="true" dbms="postgresql">
	<dropView viewName="active_user_feature_resource_v"/>
	<dropView viewName="active_user_feature_v"/>
	<dropView viewName="ACTIVE_USER_ROLE_V"/>
	<createView viewName="ACTIVE_USER_ROLE_V">
	<![CDATA[select distinct USER_NAME, APPLICATION_NAME, ROLE_NAME, ROLE_ID, SCOPE_ID, USER_CONTEXT_ID from (
		  select u.USER_NAME,a.NAME as APPLICATION_NAME, r.NAME as ROLE_NAME, r.ROLE_ID, ur.SCOPE_ID, ur.USER_CONTEXT_ID
		  from USER_T u,
		       USER_CONTEXT_T ur,
		       ROLE_T r
		  INNER JOIN permission_t p on p.role_id=r.role_id
          INNER JOIN FEATURE_T f on f.FEATURE_ID=p.FEATURE_ID
          INNER JOIN application_t a on a.APPLICATION_ID=f.APPLICATION_ID  
		  where ur.ROLE_ID=r.ROLE_ID
		    and ur.USER_ID=u.USER_ID
		    and ur.SCOPE_ID is null
		    and r.STATUS='E'
		    and (u.STATUS='E' or (u.STATUS='L' and u.LOCKOUT_TO<=NOW()))
		    and coalesce(u.ACTIVE_FROM, NOW())<= NOW()
		    and coalesce(u.ACTIVE_TO, NOW())>= NOW()
		  union
		  select u.USER_NAME,a.NAME as APPLICATION_NAME, r.NAME as ROLE_NAME, r.ROLE_ID, ur.SCOPE_ID, ur.USER_CONTEXT_ID
		  from USER_T u,
		       USER_CONTEXT_T ur,
		       SCOPE_T s,
		    	ROLE_T r
		  INNER JOIN permission_t p on p.role_id=r.role_id
          INNER JOIN FEATURE_T f on f.FEATURE_ID=p.FEATURE_ID
          INNER JOIN application_t a on a.APPLICATION_ID=f.APPLICATION_ID    	
		  where ur.ROLE_ID=r.ROLE_ID
		    and ur.USER_ID=u.USER_ID
		    and ur.SCOPE_ID=s.SCOPE_ID
		    and r.STATUS='E'
		    and (u.STATUS='E' or (u.STATUS='L' and u.LOCKOUT_TO<=NOW()))
		    and s.STATUS='E'
		    and coalesce(u.ACTIVE_FROM, NOW())<= NOW()
		    and coalesce(u.ACTIVE_TO, NOW())>= NOW()
		    and coalesce(s.ACTIVE_FROM, NOW())<= NOW()
		    and coalesce(s.ACTIVE_TO, NOW())>= NOW()
		) foo]]>
	</createView>
	<rollback>
		<dropView viewName="ACTIVE_USER_ROLE_V"/>
	</rollback>
</changeSet>

<changeSet author="emtudorsm" id="roleTable_update1">
	<dropForeignKeyConstraint baseTableName="ROLE_T" constraintName="ROLE_APPLICATION_FK"/> 
	<dropColumn tableName="ROLE_T" columnName="APPLICATION_ID" />
	<createIndex tableName="role_t" indexName="uk_role_app" unique="true">
		  <column name="name"/>
	</createIndex>
</changeSet>

 <changeSet author="emtudorsm" id="postgresqlAusView_update1" runOnChange="true" dbms="postgresql">
  	<dropView viewName="ACTIVE_USER_SCOPE_V"/>
  <createView viewName="ACTIVE_USER_SCOPE_V">
    <![CDATA[select distinct USER_NAME,APPLICATION_NAME,SCOPE_NAME,SCOPE_ID,DATA_FROM,DATA_TO from (
      select u.USER_NAME,a.NAME as APPLICATION_NAME,s.NAME as SCOPE_NAME,s.SCOPE_ID,s.DATA_FROM,s.DATA_TO
      from USER_T u,
           USER_CONTEXT_T ur,
           SCOPE_T s
      INNER JOIN SCOPE_DATASET_T sd on sd.scope_id=s.scope_id
      INNER JOIN DATASET_T ds on ds.DATASET_ID=sd.DATASET_ID
      INNER JOIN APPLICATION_T a on a.APPLICATION_ID=ds.APPLICATION_ID      	
      where ur.USER_ID=u.USER_ID
        and ur.SCOPE_ID=s.SCOPE_ID
        and (u.STATUS='E' or (u.STATUS='L' and u.LOCKOUT_TO<=NOW()))
        and s.STATUS='E'
        and coalesce(u.ACTIVE_FROM, NOW())<= NOW()
        and coalesce(u.ACTIVE_TO, NOW())>= NOW()
        and coalesce(s.ACTIVE_FROM, NOW())<= NOW()
        and coalesce(s.ACTIVE_TO, NOW())>= NOW()
    ) foo]]>
  </createView>
  <rollback>
    <dropView viewName="ACTIVE_USER_SCOPE_V"/>
  </rollback>
  </changeSet>

<changeSet author="emtudorsm" id="scopeTable_update1">
	<dropForeignKeyConstraint baseTableName="SCOPE_T" constraintName="SCOPE_APPLICATION_FK"/>
	<dropColumn tableName="SCOPE_T" columnName="APPLICATION_ID"/>
	<createIndex tableName="scope_t" indexName="uk_scope_app" unique="true">
		<column name="name"/>
	</createIndex>
</changeSet>

<changeSet author="emtudorsm" id="option_features_update1">
	<addColumn tableName="OPTION_T">
		<column name="group_name" type="VARCHAR(128)" remarks="It helps grouping the options for a faster search"/>
	</addColumn>
	<addColumn tableName="FEATURE_T">
		<column name="group_name" type="VARCHAR(128)" remarks="It helps grouping the features for a faster search"/>
	</addColumn>
</changeSet>

<changeSet author="emtudorsm" id="preferenceTable_update1">
	<addColumn tableName="PREFERENCE_T">
		<column name="USER_CONTEXT_ID" type="INTEGER"/>
	</addColumn>
	<createIndex tableName="preference_t" indexName="fk_preference_user_cont">
	  <column name="user_context_id"/>
	</createIndex>
	<addForeignKeyConstraint baseTableName="preference_t" constraintName="preference_user_cont_fk" baseColumnNames="user_context_id" referencedTableName="user_context_t" referencedColumnNames="user_context_id"/>
</changeSet>
</databaseChangeLog>